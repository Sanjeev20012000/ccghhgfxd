{
  "name": "Telegram Bot",
  "description": "A Telegram bot based on Pyrogram.",
  "keywords": [
    "telegram"
  ],
  "repository": "https://google.com",
  "success_url": "https://t.me/telegram",
  "website": "https://github.com",
  "stack": "container",
  "env": {
    "ENV": {
      "description": "Setting this to ANYTHING will enable webhooks when in env mode",
      "value": "ANYTHING"
    },
    "TELEGRAM_API": {
      "description": "Get this value from https://my.telegram.org",
      "value": "FILL YOURSELF"
    },
    "TELEGRAM_HASH": {
      "description": "Get this value from https://my.telegram.org",
      "value": "FILL YOURSELF"
    },
    "BOT_TOKEN": {
      "description": "get this value from @BotFather",
      "value": "TELEGRAM BOT TOKEN"
    },
    "AUTHORIZED_CHATS": {
      "description": "should be an integer. The ID of the Telegram Group, where the Mirror leech should work.",
      "value": "For multiple IDs, use space between telegram chat IDs"
    },
    "OWNER_ID": {
      "description": "should be an integer. ID of owner of bot",
      "value": "FILL OWNER ID OF BOT"
    },
    "GDRIVE_FOLDER_ID": {
      "description": "This is the folder ID of the Google Drive Folder to which you want to upload all the mirrors.",
      "value": "Drive folder ID in which you are uploading"
    },
    "CHUNK_SIZE": {
      "description": "should be an integer",
      "value": "128",
      "required": false
    },
    "ARIA_TWO_STARTED_PORT": {
      "description": "should be an integer. The port on which aria2c daemon must start, and keep listening.",
      "value": "6800",
      "required": false
    },
    "DOWNLOAD_DIR": {
      "description": "The path to the local folder where the downloads should be downloaded to.",
      "value": "/usr/src/app/downloads",
    },
    "AUTO_DELETE_MESSAGE_DURATION": {
      "description": "Interval of time (in seconds), after which the bot deletes it's message (and command message) which is expected to be viewed instantly. Note: Set to -1 to never automatically delete messages.",
      "required": false
    },
    "FINISHED_PROGRESS_STR": {
      "description": "should be a single character.",
      "required": false
    },
    "UN_FINISHED_PROGRESS_STR": {
      "description": "should be a single character.",
      "required": false
    },
    "TG_OFFENSIVE_API": {
      "description": "should be an URL accepting the FormParams {i}, {m}, and {t}",
      "required": false
    },
    "BASE_URL_OF_BOT": {
      "description": "Web Link, Required for Heroku to avoid sleep or use worker if you don't want to use web (selection)",
      "value": https://putyourherokuappnamehere.herokuapp.com
    },
    "INDEX_URL": {
      "description": "Enter your index link:",
      "value": "index url"
    },
    "STOP_DUPLICATE": {
      "description": "Make it true if you want to Stop mirror Same file/folder multiple times.",
      "value": "false"
    },
    "SERVER_PORT": {
      "description": "No need To change.",
      "value": "80"
    },
    "CRYPT": {
      "description": "Crypt id, used to clone/leech gdtot links",
      "value": "Get it from Your gdtot cookies."
    },
    "SUDO_USERS": {
      "description": "List of id of sudo users, Separated by space",
      "value": "IDs of sudo users # Separated by space"
    },
    "TORRENT_DIRECT_LIMIT": {
      "description": "Maximum Size of file/folder to clone.",
      "value": "250 gb"
    },
    "CLONE_LIMIT": {
      "description": "Maximum Size of file/folder to clone.",
      "value": "750 gb"
    },
    "VIEW_LINK": {
      "description": "View Link button to open file Index Link in browser instead of direct download link",
      "value": "False"
    },
    "IS_TEAM_DRIVE": {
      "description": "Set to 'True' if GDRIVE_FOLDER_ID is from a Team Drive else False or Leave it empty.",
      "value": "True"
    },
    "CUSTOM_FILE_NAME": {
      "description": "fill with name u want to prefix the file name like ur channel usernameðŸ™Š, keep empty for do nothing, but add to ur config vars even without input.",
      "required": false
    }
  },
  "addons": [
    {
      "plan": "heroku-postgresql"
    }
  ]
}
